"use client";

import { useState, useEffect, useRef, ReactNode } from "react";

import "./globals.css";
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import ThemeProvider from "./ThemeProvider";
import "tailwindcss/tailwind.css";

import Sidebar from "./Sidebar";
import Toolbar from "./Toolbar";

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
  themeColor: "#8b5cf6",
};

const inter = Inter({
    subsets: ["latin"],
    variable: "--font-inter",
    display: "swap",
  });


export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const [collapsed, setCollapsed] = useState<boolean>(false);

  const toggleRef = useRef<HTMLButtonElement>(null);
  const sidebarRef = useRef<HTMLElement>(null);

  
  useEffect(() => {
    const handleClick = (event) => {
      const insideToggle = toggleRef.current?.contains(event.target);
      const insideMenu = sidebarRef.current?.contains(event.target);

      if (!(insideToggle || insideMenu)) {
        setCollapsed(false);
      }
    };

    const mediaQuery = window.matchMedia("(max-width: 639px)");

    if (mediaQuery.matches) {
      window.addEventListener("click", handleClick);
    }

    return () => window.removeEventListener("click", handleClick);
  }, []);

  const toggleCollapsed = () => {
    setCollapsed(!collapsed);
  };

  return (
    <html lang="en" className={`${inter.variable} font-sans antialiased`}>
      <body className="bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200">
        <ThemeProvider>
          <div className="flex">
            <Sidebar collapsed={collapsed} ref={sidebarRef} />
            <div className="w-full overflow-y-hidden ml-6">
              <Toolbar toggleCollapsed={toggleCollapsed} ref={toggleRef} />
              <main className="w-screen sm:w-auto px-4 ">
                {children}
              </main>
            </div>
          </div>
        </ThemeProvider>
      </body>
    </html>
  );
}
